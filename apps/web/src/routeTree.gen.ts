/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as LoginRouteImport } from './routes/login'
import { Route as AboutRouteImport } from './routes/about'
import { Route as ProtectedRouteImport } from './routes/_protected'
import { Route as ProtectedIndexRouteImport } from './routes/_protected/index'
import { Route as ProtectedProfileRouteImport } from './routes/_protected/profile'
import { Route as ProtectedClimbsIndexRouteImport } from './routes/_protected/climbs/index'
import { Route as ProtectedClimbsAddClimbRouteImport } from './routes/_protected/climbs/add-climb'
import { Route as ProtectedClimbsIdRouteImport } from './routes/_protected/climbs/$id'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedIndexRoute = ProtectedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedProfileRoute = ProtectedProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedClimbsIndexRoute = ProtectedClimbsIndexRouteImport.update({
  id: '/climbs/',
  path: '/climbs/',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedClimbsAddClimbRoute = ProtectedClimbsAddClimbRouteImport.update({
  id: '/climbs/add-climb',
  path: '/climbs/add-climb',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedClimbsIdRoute = ProtectedClimbsIdRouteImport.update({
  id: '/climbs/$id',
  path: '/climbs/$id',
  getParentRoute: () => ProtectedRoute,
} as any)

export interface FileRoutesByFullPath {
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/profile': typeof ProtectedProfileRoute
  '/': typeof ProtectedIndexRoute
  '/climbs/$id': typeof ProtectedClimbsIdRoute
  '/climbs/add-climb': typeof ProtectedClimbsAddClimbRoute
  '/climbs': typeof ProtectedClimbsIndexRoute
}
export interface FileRoutesByTo {
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/profile': typeof ProtectedProfileRoute
  '/': typeof ProtectedIndexRoute
  '/climbs/$id': typeof ProtectedClimbsIdRoute
  '/climbs/add-climb': typeof ProtectedClimbsAddClimbRoute
  '/climbs': typeof ProtectedClimbsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_protected': typeof ProtectedRouteWithChildren
  '/about': typeof AboutRoute
  '/login': typeof LoginRoute
  '/signup': typeof SignupRoute
  '/_protected/profile': typeof ProtectedProfileRoute
  '/_protected/': typeof ProtectedIndexRoute
  '/_protected/climbs/$id': typeof ProtectedClimbsIdRoute
  '/_protected/climbs/add-climb': typeof ProtectedClimbsAddClimbRoute
  '/_protected/climbs/': typeof ProtectedClimbsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/about'
    | '/login'
    | '/signup'
    | '/profile'
    | '/'
    | '/climbs/$id'
    | '/climbs/add-climb'
    | '/climbs'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/about'
    | '/login'
    | '/signup'
    | '/profile'
    | '/'
    | '/climbs/$id'
    | '/climbs/add-climb'
    | '/climbs'
  id:
    | '__root__'
    | '/_protected'
    | '/about'
    | '/login'
    | '/signup'
    | '/_protected/profile'
    | '/_protected/'
    | '/_protected/climbs/$id'
    | '/_protected/climbs/add-climb'
    | '/_protected/climbs/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  ProtectedRoute: typeof ProtectedRouteWithChildren
  AboutRoute: typeof AboutRoute
  LoginRoute: typeof LoginRoute
  SignupRoute: typeof SignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/': {
      id: '/_protected/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ProtectedIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/profile': {
      id: '/_protected/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProtectedProfileRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/climbs/': {
      id: '/_protected/climbs/'
      path: '/climbs'
      fullPath: '/climbs'
      preLoaderRoute: typeof ProtectedClimbsIndexRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/climbs/add-climb': {
      id: '/_protected/climbs/add-climb'
      path: '/climbs/add-climb'
      fullPath: '/climbs/add-climb'
      preLoaderRoute: typeof ProtectedClimbsAddClimbRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/climbs/$id': {
      id: '/_protected/climbs/$id'
      path: '/climbs/$id'
      fullPath: '/climbs/$id'
      preLoaderRoute: typeof ProtectedClimbsIdRouteImport
      parentRoute: typeof ProtectedRoute
    }
  }
}

interface ProtectedRouteChildren {
  ProtectedProfileRoute: typeof ProtectedProfileRoute
  ProtectedIndexRoute: typeof ProtectedIndexRoute
  ProtectedClimbsIdRoute: typeof ProtectedClimbsIdRoute
  ProtectedClimbsAddClimbRoute: typeof ProtectedClimbsAddClimbRoute
  ProtectedClimbsIndexRoute: typeof ProtectedClimbsIndexRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedProfileRoute: ProtectedProfileRoute,
  ProtectedIndexRoute: ProtectedIndexRoute,
  ProtectedClimbsIdRoute: ProtectedClimbsIdRoute,
  ProtectedClimbsAddClimbRoute: ProtectedClimbsAddClimbRoute,
  ProtectedClimbsIndexRoute: ProtectedClimbsIndexRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  ProtectedRoute: ProtectedRouteWithChildren,
  AboutRoute: AboutRoute,
  LoginRoute: LoginRoute,
  SignupRoute: SignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
